  create         host1:port1 ... hostN:portN
                 --cluster-replicas <arg>
  check          host:port
                 --cluster-search-multiple-owners
  info           host:port
  fix            host:port
                 --cluster-search-multiple-owners
  reshard        host:port
                 --cluster-from <arg>
                 --cluster-to <arg>
                 --cluster-slots <arg>
                 --cluster-yes
                 --cluster-timeout <arg>
                 --cluster-pipeline <arg>
                 --cluster-replace
  rebalance      host:port
                 --cluster-weight <node1=w1...nodeN=wN>
                 --cluster-use-empty-masters   未分配slot的master也参与分片
                 --cluster-timeout <arg>
                 --cluster-simulate          仅做演示，并未实际操作
                 --cluster-pipeline <arg>
                 --cluster-threshold <arg>
                 --cluster-replace
  add-node       new_host:new_port existing_host:existing_port
                 --cluster-slave
                 --cluster-master-id <arg>
  del-node       host:port node_id
  call           host:port command arg arg .. arg
  set-timeout    host:port milliseconds
  import         host:port
                 --cluster-from <arg>
                 --cluster-copy
                 --cluster-replace

  redis-cli --cluster create 10.0.0.2:7002 10.0.0.3:7003 10.0.0.4:7004 10.0.0.5:7005 10.0.0.6:7006 10.0.0.7:7007 --cluster-replicas 1

  redis-cli --cluster reshard 10.0.0.3:7003 --cluster-from 01bb5064e315fe188278220fe7bd6fe74f895ac9 --cluster-to d501d4b536fe3edcd6a9396611099f23143bb06e --cluster-slots 8192

  redis-cli --cluster rebalance 10.0.0.3:7003 --cluster-use-empty-masters

  redis-cli --cluster del-node 10.0.0.3:7003 01bb5064e315fe188278220fe7bd6fe74f895ac9

  redis-cli --cluster add-node 10.0.0.7:7007 10.0.0.2:7002   --cluster-slave --cluster-master-id ceb76a5ebf6e02e89bd4acce12ba4ca2e06d2954

reshard        host:port
                 --cluster-from <arg>
                 --cluster-to <arg>
                 --cluster-slots <arg>

docker run -v /Users/bing/dockerDev/redis/config/redis-6002.conf:/usr/local/etc/redis/redis.conf -p 6002:6002 --rm --name redis-m --network dev_inside_net --ip 10.0.0.10 redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf




docker run -v /Users/bing/dockerDev/redis/config/cluster-7002.conf:/usr/local/etc/redis/redis.conf -p 7002:7002 --rm --name node-2 --network dev_inside_net --ip 10.0.0.2 redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf

docker run -v /Users/bing/dockerDev/redis/config/cluster-7003.conf:/usr/local/etc/redis/redis.conf -p 7003:7003 --rm --name node-3 --network dev_inside_net --ip 10.0.0.3 redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf

docker run -v /Users/bing/dockerDev/redis/config/cluster-7004.conf:/usr/local/etc/redis/redis.conf -p 7004:7004 --rm --name node-4 --network dev_inside_net --ip 10.0.0.4 redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf

docker run -v /Users/bing/dockerDev/redis/config/cluster-7005.conf:/usr/local/etc/redis/redis.conf -p 7005:7005 --rm --name node-5 --network dev_inside_net --ip 10.0.0.5 redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf

docker run -v /Users/bing/dockerDev/redis/config/cluster-7006.conf:/usr/local/etc/redis/redis.conf -p 7006:7006 --rm --name node-6 --network dev_inside_net --ip 10.0.0.6 redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf

docker run -v /Users/bing/dockerDev/redis/config/cluster-7007.conf:/usr/local/etc/redis/redis.conf -p 7007:7007 --rm --name node-7 --network dev_inside_net --ip 10.0.0.7 redis:5.0.5-alpine redis-server /usr/local/etc/redis/redis.conf



import         host:port
                 --cluster-from <arg>
                 --cluster-copy
                 --cluster-replace

redis-cli --cluster import 10.0.0.2:7002 --cluster-from 10.0.0.10:6002 --cluster-copy
# 配置总结，原配置注释较多，抽取关键

## 以配置文件的形式启动 ##
## ./redis-server /path/to/redis.conf

## 字节大小单位：不区分大小写 ##
# 1k => 1000 bytes
# 1kb => 1024 bytes
# 1m => 1000000 bytes
# 1mb => 1024*1024 bytes
# 1g => 1000000000 bytes
# 1gb => 1024*1024*1024 bytes

## 加载分离的配置 ##
# include /path/to/other.conf

## 加载启动时需要的模块  ##
# loadmodule /path/to/other_module.so



## lua 脚本设置
# lua-time-limit 5000    毫秒：脚本执行超时时间

###################### 网络配置 #############################
# bind ip1 ip2 ... 不配置，谁想连谁连
# 保护模式，默认开启 #
# 1、保护模式，默认开启，需要bind下的ip或提供passwd才能连接；
# 2、关闭，no，外部网络都可以连
# protected-mode yes

# port 6379 服务端口；设置0，不提供tcp连接

# tcp-backlog 511 tcp连接数

# unixsocket /tmp/redis.sock  本地socket连接
# unixsocketperm 700          socket权限

# timeout 0  闲置多少秒，关闭连接；0代表用不关闭

# tcp-keepalive 300 ：300秒发送一次tcp心跳，保持连接

###################### 运行配置 #############################

# daemonize no  是否后台运行，并写pidfile
# pidfile /var/run/redis_6379.pid  pid文件位置

# loglevel notice	错误级别：debug、verbose、notice、warning
# logfile ""        日志文件位置，空串：输出到控制台标准输出

# always-show-logo yes	启动是否输出redis的logo

# databases 16	数据库号

###################### 备份配置 #############################

# save <seconds> <changes>  多少秒内有几个key改动，就备份；不配置，没备份

# stop-writes-on-bgsave-error yes	备份失败时，不提供写服务了
# rdbcompression yes	备份文件启用压缩

# rdbchecksum yes	CRC64数据文件校验
# dbfilename dump.rdb   备份的文件名
# dir ./    备份到这个目录下

###################### 主从配置 #############################

# slaveof <masterip> <masterport>   从属那个服务器及端口
# masterauth <master-password>      链接主服务器，需要的密码校验

# 与master失去连接时，yes：slave继续接受客户端的请求；no：slave拒绝客户端的请求（INFO and SLAVEOF除外）
# slave-serve-stale-data yes
# slave-read-only yes   设置slave只读模式

## 新加的同步方式，老套路：rdb文件写到硬盘再分发个slave，新套路：直接把文件写到slave的socket
# repl-diskless-sync no
# repl-diskless-sync-delay 5	延迟几秒，为了等更多的slave一起并行接受

# repl-ping-slave-period 10	    从间隔时间往master发从ping
# repl-timeout 60	            主从通信超时时间，应该比repl-ping-slave-period大

# repl-disable-tcp-nodelay no	    是否开启 TCP_NODELAY

# repl-backlog-size 1mb	    缓存区大小，用于保存发送给slave的rdb的偏移量部分
# repl-backlog-ttl 3600	    没有slave链接master多久秒后，销毁缓冲区

# slave-priority 100	    sentinel模式，选作为master的权重，小的能胜出

## master提供写服务的最基本条件
# min-slaves-to-write 3	    至少3个slave
# min-slaves-max-lag 10	    slave ping 延迟时间

# slave-announce-ip 5.5.5.5     显示主机信息时，slave ip
# slave-announce-port 1234      显示主机信息时，slave port
###################### 安全配置 #############################

# requirepass foobared   设置登录密码

# rename-command CONFIG  some-other-name	修改命令的名字，防止重要的命令被人执行；设置为空则禁用

###################### 客户端配置 #############################

# maxclients 10000	    最大客户端链接数

###################### 内存配置 #############################

# maxmemory <bytes>

# LRU ：最近最少使用
# LFU ：最不常用

## 内存用完了，怎么个策略
# 1、volatile-lru    -> LRU-淘汰带过期时间的
# 2、allkeys-lru     -> LRU-淘汰任一个
# 3、volatile-lfu    -> LFU-淘汰带过期时间的
# 4、allkeys-lfu     -> LFU-淘汰任一个
# 5、volatile-random -> 随机移除一个带过期时间的
# 6、allkeys-random  -> 随机移除一个
# 7、volatile-ttl    -> 删除即将过期的
# 8、noeviction      -> 报错，不能继续写 （默认）
# maxmemory-policy noeviction

## 淘汰算法的获取样本大小（非精确）
# maxmemory-samples 5

###################### 懒删除（无阻塞） #############################

# lazyfree-lazy-eviction no     是否在内存用完时，懒删除空间
# lazyfree-lazy-expire no       是否懒删除过期的
# lazyfree-lazy-server-del no   是否删除操作时，懒删除
# slave-lazy-flush no           是否清空数据库时

###################### AOF 备份 #############################

# appendonly no     是否开启
# appendfilename "appendonly.aof"    文件名
# appendfsync everysec      同步方式：always、no、everysec
# no-appendfsync-on-rewrite no    yes：当有进程在执行备份时，本次不执行

## 重新 aof文件的条件
# auto-aof-rewrite-percentage 100     0为禁用，文件的大小增长率
# auto-aof-rewrite-min-size 64mb      前提条件：文件的最小大小

# aof-load-truncated yes       文件不完整时，是否继续执行加载

# aof-use-rdb-preamble no      重写aof文件，使用rdb文件的头部分

###################### CLUSTER 配置 #############################
# 以cluster启动的redis节点

# cluster-enabled yes   开启cluster

# cluster-config-file nodes-6379.conf      配置文件

# cluster-node-timeout 15000    毫秒：节点超时时间

# cluster-slave-validity-factor 10   故障转移时，绝定从能否上位的因素（控制最大的通信时间段，可能好久没同步了，上位了数据老掉牙）
# cluster-migration-barrier 1        用处：一个主没有从了，从其他从服务中，借一个过来当做从；大前提：人家至少得保留一个从，这是个界限
# cluster-require-full-coverage yes   默认集群一个master不可用，整个集群不可用；no：集群可继续部分提供服务
# cluster-slave-no-failover no    故障转移切换

###################### 慢日志 配置 #############################

# slowlog-log-slower-than 10000   微秒，0：记录每一个操作，1：负数，禁用慢日志
# slowlog-max-len 128   慢日志队列长度





